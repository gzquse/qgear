
*=================              ideal_qcrank.py
Basic test of QCrank
.... PARAMETRIZED CIRCUIT .............. n_pix=8,  qcrank_opt=True, cx-depth=4
 gates count: OrderedDict([('ry', 8), ('cx', 8), ('measure', 4), ('h', 2), ('barrier', 2)])
              ░ ┌───────────┐     ┌───┐┌───────────┐     ┌───┐┌───────────┐     ┌───┐┌───────────┐     ┌───┐ ░ ┌─┐         
   q_0: ──────░─┤ Ry(p1[0]) ├─────┤ X ├┤ Ry(p1[1]) ├─────┤ X ├┤ Ry(p1[2]) ├─────┤ X ├┤ Ry(p1[3]) ├─────┤ X ├─░─┤M├─────────
              ░ ├───────────┤┌───┐└─┬─┘├───────────┤┌───┐└─┬─┘├───────────┤┌───┐└─┬─┘├───────────┤┌───┐└─┬─┘ ░ └╥┘┌─┐      
   q_1: ──────░─┤ Ry(p0[0]) ├┤ X ├──┼──┤ Ry(p0[1]) ├┤ X ├──┼──┤ Ry(p0[2]) ├┤ X ├──┼──┤ Ry(p0[3]) ├┤ X ├──┼───░──╫─┤M├──────
        ┌───┐ ░ └───────────┘└─┬─┘  │  └───────────┘└─┬─┘  │  └───────────┘└─┬─┘  │  └───────────┘└─┬─┘  │   ░  ║ └╥┘┌─┐   
   q_2: ┤ H ├─░────────────────■────┼─────────────────┼────■─────────────────■────┼─────────────────┼────■───░──╫──╫─┤M├───
        ├───┤ ░                     │                 │                           │                 │        ░  ║  ║ └╥┘┌─┐
   q_3: ┤ H ├─░─────────────────────■─────────────────■───────────────────────────■─────────────────■────────░──╫──╫──╫─┤M├
        └───┘ ░                                                                                              ░  ║  ║  ║ └╥┘
meas: 4/════════════════════════════════════════════════════════════════════════════════════════════════════════╩══╩══╩══╩═
                                                                                                                0  1  2  3 
'-e' will save circuit in QPY format
Saved circ1: out/qcrank_nqa2_nqd2.qpy

see ./toy_IO_qpyCirc.py to read it back and assign params

*=================    ./toy_ghz_backAer.py
Exercise Aer

     ┌───┐             ┌─┐   
q_0: ┤ H ├──■────■─────┤M├───
     └───┘┌─┴─┐  │  ┌─┐└╥┘   
q_1: ─────┤ X ├──┼──┤M├─╫────
          └───┘┌─┴─┐└╥┘ ║ ┌─┐
q_2: ──────────┤ X ├─╫──╫─┤M├
               └───┘ ║  ║ └╥┘
c: 3/════════════════╩══╩══╩═
                     1  0  2 
M: job nqTot=3 started ...
M: QCrank simu   shots=800   ended elaT=0.0 sec
counts: {'000': 407, '111': 393}




*=================     ./toy_IO_qpyCirc.py
Saves + reads  circut using QPY format
Examins recovred circuit structure
runs Aer


*=================   ./cudaq_qpyCirc.py

Reads qpy circ and runs on GPU
     ┌────────┐┌────┐┌────────┐             ┌─┐   
q_0: ┤ P(π/2) ├┤ √X ├┤ P(π/2) ├──■────■─────┤M├───
     └────────┘└────┘└────────┘┌─┴─┐  │  ┌─┐└╥┘   
q_1: ──────────────────────────┤ X ├──┼──┤M├─╫────
                               └───┘┌─┴─┐└╥┘ ║ ┌─┐
q_2: ───────────────────────────────┤ X ├─╫──╫─┤M├
                                    └───┘ ║  ║ └╥┘
c: 3/═════════════════════════════════════╩══╩══╩═
                                          1  0  2 

     ╭───────────╮╭───────────╮╭───────────╮          
q0 : ┤ rz(1.571) ├┤ rx(1.571) ├┤ rz(1.571) ├──●────●──
     ╰───────────╯╰───────────╯╰───────────╯╭─┴─╮  │  
q1 : ───────────────────────────────────────┤ x ├──┼──
                                            ╰───╯╭─┴─╮
q2 : ────────────────────────────────────────────┤ x ├
                                                 ╰───╯

M: run cudaq-circuit  on GPU
{ 000:399 111:401 }
 


*=================     
Absolute speed for adj-4GPU
salloc -N 1 --gpus-per-task=1 --ntasks-per-node=1   -t 4:00:00 -q interactive -A nintern -C gpu  --gpu-bind=none

. pm_balewski.source mpi
 cd explore
 mpirun -np 4 python3   RND_ker1.py -q 31 -r 80

 -q 31 -r 80 : 30 sec
 -q 32 -r 80 : 35 sec
 -q 33 -r 80 : 67 sec
 -q 34 -r 80: Too few GPUs for too many qubits.


*=================     



*=================     


